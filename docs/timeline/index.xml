<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Timelines on Notes</title>
        <link>http://notes.gbojinov.xyz/timeline/</link>
        <description>Recent content in Timelines on Notes</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 28 Feb 2021 00:00:00 +0200</lastBuildDate>
        <atom:link href="http://notes.gbojinov.xyz/timeline/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Achieving totality in functions</title>
            <link>http://notes.gbojinov.xyz/timeline/20210228225209-achieving-totality-in-functions/</link>
            <pubDate>Sun, 28 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210228225209-achieving-totality-in-functions/</guid>
            <description>Note This pertains to Haskell, but the concepts are valid in any functional language.
How to achieve totality? Common patterns:
 Using a default value, e.g. something like mempty of Monoid Using Maybe, Either, Validation, These, which are effects to model situations like these Restricting input types (e.g. NonEmpty, or newtypes / refinement types) Make abstractions smaller (example: don&amp;rsquo;t define typeclass instances for types where some of the methods might be partial - Num and Natural typeclass for example, as Num has negative values as well) Compiler warnings, static analysers, program verification (a bit more specific to FP languages and Haskell) Dependent types (types that depend on values) - allows you to pass in requirements for types at the type levels (e.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>This pertains to Haskell, but the concepts are valid in any functional language.</p>
<p>How to achieve totality? Common patterns:</p>
<ul>
<li>Using a default value, e.g. something like <code>mempty</code> of <code>Monoid</code></li>
<li>Using <code>Maybe</code>, <code>Either</code>, <code>Validation</code>, <code>These</code>, which are effects to model situations like these</li>
<li>Restricting input types (e.g. <code>NonEmpty</code>, or newtypes / refinement types)</li>
<li>Make abstractions smaller (example: don&rsquo;t define typeclass instances for types where some of the methods might
be partial - <code>Num</code> and <code>Natural</code> typeclass for example, as <code>Num</code> has negative values as well)</li>
<li>Compiler warnings, static analysers, program verification (a bit more specific to FP languages and Haskell)</li>
<li>Dependent types (types that depend on values) - allows you to pass in requirements for types at the type
levels (e.g. this list will have 5 elements, this integer is not zero, these two matrices have compatible
dimensions so that they can be multiplied)</li>
</ul>
<p>Totality is hard - we don&rsquo;t have enough automated tools to enforce it for now, so we should incorporate it by following these best practices and bake it into our architecture by modeling things in a total way. Totality does not come for free.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210228222248-totality-in-functional-programming/">Totality in Functional Programming</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210228225636-total-functions-and-how-they-are-useful-to-us/">Total functions and how they are useful to us</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Given and Using Clauses in Scala 3</title>
            <link>http://notes.gbojinov.xyz/timeline/20210228222135-given-and-using-clauses-in-scala-3/</link>
            <pubDate>Sun, 28 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210228222135-given-and-using-clauses-in-scala-3/</guid>
            <description>Notes Givens in Scala 3 as behaviours injected into functions
Givens in Scala 3 as proofs of existence of types
Other random facts about givens:
To import givens:
object Givens { given personOrdering as Ordering[Person] { ??? } } import Givens.personOrdering import Givens.{given Ordering[Person]} import Givens.{given _} Givens can be &amp;ldquo;derived&amp;rdquo; (as this is not the same as deriving in Haskell for example, where instances are defined automatically). Here it means, when you have a higher kinded type like Ordering[T] for example, you can write an instance for Ordering[Option[T]] using the first instance.</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p><a href="/timeline/20210228223015-givens-in-scala-3-as-behaviours-injected-into-functions/">Givens in Scala 3 as behaviours injected into functions</a></p>
<p><a href="/timeline/20210228223600-givens-in-scala-3-as-proofs-of-existence-of-types/">Givens in Scala 3 as proofs of existence of types</a></p>
<p>Other random facts about <code>givens</code>:</p>
<p>To import <code>givens</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-scala" data-lang="scala"><span style="color:#66d9ef">object</span> <span style="color:#a6e22e">Givens</span> <span style="color:#f92672">{</span>
  given personOrdering as <span style="color:#a6e22e">Ordering</span><span style="color:#f92672">[</span><span style="color:#66d9ef">Person</span><span style="color:#f92672">]</span> <span style="color:#f92672">{</span>
    <span style="color:#f92672">???</span>
  <span style="color:#f92672">}</span>
<span style="color:#f92672">}</span>

<span style="color:#66d9ef">import</span> Givens.personOrdering
<span style="color:#66d9ef">import</span> Givens.<span style="color:#f92672">{</span>given <span style="color:#a6e22e">Ordering</span><span style="color:#f92672">[</span><span style="color:#66d9ef">Person</span><span style="color:#f92672">]}</span>
<span style="color:#66d9ef">import</span> Givens.<span style="color:#f92672">{</span>given <span style="color:#66d9ef">_</span><span style="color:#f92672">}</span>
</code></pre></div><p>Givens can be &ldquo;derived&rdquo; (as this is not the same as deriving in Haskell for example, where instances are defined
automatically). Here it means, when you have a higher kinded type like <code>Ordering[T]</code> for example, you can write
an instance for <code>Ordering[Option[T]]</code> using the first instance.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-scala" data-lang="scala">given optionOrdering<span style="color:#f92672">[</span><span style="color:#66d9ef">T</span><span style="color:#f92672">](</span>using tOrdering<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">Ordering</span><span style="color:#f92672">[</span><span style="color:#66d9ef">T</span><span style="color:#f92672">])</span> as <span style="color:#a6e22e">Ordering</span><span style="color:#f92672">[</span><span style="color:#66d9ef">Option</span><span style="color:#f92672">[</span><span style="color:#66d9ef">T</span><span style="color:#f92672">]]</span> <span style="color:#f92672">{</span>
  <span style="color:#75715e">// pattern match on Option values
</span><span style="color:#75715e"></span>  <span style="color:#66d9ef">def</span> compare<span style="color:#f92672">(</span>optionA<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">Option</span><span style="color:#f92672">[</span><span style="color:#66d9ef">T</span><span style="color:#f92672">],</span> optionB<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">Option</span><span style="color:#f92672">[</span><span style="color:#66d9ef">T</span><span style="color:#f92672">])</span> <span style="color:#66d9ef">=</span> <span style="color:#f92672">???</span>
<span style="color:#f92672">}</span>
</code></pre></div><p>With implicits you would have to use <code>implicitly</code> to fetch the implicit for the type <code>T</code>, which adds more
confusion to the mix. It took me an embarrassing amount of time to understand <code>implicitly</code>.</p>
<p>Can&rsquo;t have &gt; 1 <code>given</code> instance for a type. Compiler would be confused which one to pick. Be good to the compiler!</p>
<p>Uses of <code>givens</code>:</p>
<ol>
<li>Type classes</li>
<li>Dependency Injection</li>
<li>Type level programming</li>
</ol>
<p>Comparison with <code>implicits</code> - better syntax, better name, less boilerplate. This seems like a great step towards
making one of the most powerful but esoteric features of Scala more accessible to newcomers.</p>
<h2 id="resources">Resources</h2>
<p><a href="https://blog.rockthejvm.com/scala-3-given-using/">https://blog.rockthejvm.com/scala-3-given-using/</a></p>
]]></content>
        </item>
        
        <item>
            <title>Givens in Scala 3 as behaviours injected into functions</title>
            <link>http://notes.gbojinov.xyz/timeline/20210228223015-givens-in-scala-3-as-behaviours-injected-into-functions/</link>
            <pubDate>Sun, 28 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210228223015-givens-in-scala-3-as-behaviours-injected-into-functions/</guid>
            <description>Note What is the use case of givens in Scala 3? They are a replacement for implicits, avoiding to explicitly have to pass instances used at call site. Given is well named - it is considered a &amp;ldquo;given&amp;rdquo; to the function. We don&amp;rsquo;t instantiate it as we do with implicits, but rather automatically creates instances to be injected in the function at call site.
An example of a given instance that defines an ordering behaviour for a custom type Person:</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>What is the use case of <code>givens</code> in Scala 3?
They are a replacement for <code>implicits</code>, avoiding to explicitly have to pass instances used at call site.
<code>Given</code> is well named - it is considered a &ldquo;given&rdquo; to the function. We don&rsquo;t instantiate it as we do with
implicits, but rather automatically creates instances to be injected in the function at call site.</p>
<p>An example of a <code>given</code> instance that defines an ordering behaviour for a custom type <code>Person</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-scala" data-lang="scala">given personOrdering as <span style="color:#a6e22e">Ordering</span><span style="color:#f92672">[</span><span style="color:#66d9ef">Person</span><span style="color:#f92672">]</span> <span style="color:#f92672">{</span>
  <span style="color:#66d9ef">override</span> <span style="color:#66d9ef">def</span> compare<span style="color:#f92672">(</span>x<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">Person</span><span style="color:#f92672">,</span> y<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">Person</span><span style="color:#f92672">)</span><span style="color:#66d9ef">:</span> <span style="color:#66d9ef">Int</span> <span style="color:#f92672">=</span>
    x<span style="color:#f92672">.</span>surname<span style="color:#f92672">.</span>compareTo<span style="color:#f92672">(</span>y<span style="color:#f92672">.</span>surname<span style="color:#f92672">)</span>
<span style="color:#f92672">}</span>
</code></pre></div><p>And then in the function to use it:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-scala" data-lang="scala"><span style="color:#66d9ef">def</span> listPeople<span style="color:#f92672">(</span>people<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">List</span><span style="color:#f92672">[</span><span style="color:#66d9ef">Person</span><span style="color:#f92672">])(</span>using ordering<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">Ordering</span><span style="color:#f92672">[</span><span style="color:#66d9ef">Person</span><span style="color:#f92672">])</span> <span style="color:#66d9ef">=</span> <span style="color:#f92672">???</span>
</code></pre></div><p>This way we don&rsquo;t need to explicitly pass the <code>ordering</code> argument. We are <code>using</code> the ordering behaviour we have
previously defined for the <code>Person</code> type. This encodes the concept of type classes, e.g. behaviours for types.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210228222135-given-and-using-clauses-in-scala-3/">Given and Using Clauses in Scala 3</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210228223015-givens-in-scala-3-as-behaviours-injected-into-functions/">Givens in Scala 3 as behaviours injected into functions</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Givens in Scala 3 as proofs of existence of types</title>
            <link>http://notes.gbojinov.xyz/timeline/20210228223600-givens-in-scala-3-as-proofs-of-existence-of-types/</link>
            <pubDate>Sun, 28 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210228223600-givens-in-scala-3-as-proofs-of-existence-of-types/</guid>
            <description>Note From the point of view of Type level programming, a given proves the existence of a type - e.g. the compiler can prove the existence of types, and then create new given instances using those types. This can be used for computations at compile time. (e.g. for a type level sum for example)
A given is conceptually constructing an instance of a type with a concrete behaviour where a using claused is used.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>From the point of view of Type level programming, a <code>given</code> proves the existence of a type - e.g. the compiler
can prove the existence of types, and then create new given instances <code>using</code> those types. This can be used for
computations at compile time. (e.g. for a type level sum for example)</p>
<p>A <code>given</code> is conceptually constructing an instance of a type with a concrete behaviour where a <code>using</code> claused is used.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210228222135-given-and-using-clauses-in-scala-3/">Given and Using Clauses in Scala 3</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210228223015-givens-in-scala-3-as-behaviours-injected-into-functions/">Givens in Scala 3 as behaviours injected into functions</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Total functions and how they are useful to us</title>
            <link>http://notes.gbojinov.xyz/timeline/20210228225636-total-functions-and-how-they-are-useful-to-us/</link>
            <pubDate>Sun, 28 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210228225636-total-functions-and-how-they-are-useful-to-us/</guid>
            <description>Note Functions in programming are different from maths as they are a concrete implementation of something abstract, and thus have problems like how long they take to compute and whether they finish or hang. They have side effects as well. But FP mitigates some of these differences (e.g. pure functions), which allows us to talk about totality.
A total function terminates and returns an output value for every value of the input domain.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>Functions in programming are different from maths as they are a concrete implementation of something
abstract, and thus have problems like how long they take to compute and whether they finish or hang.
They have side effects as well. But FP mitigates some of these differences (e.g. pure functions), which allows us to talk about totality.</p>
<p>A total function terminates and returns an output value for every value of the input domain.
Totality in programming means avoiding runtime exceptions by preventing them from happening at compile time.
Real totality is achieved without a bottom value, that in programming is usually something like <code>undefined</code> in
Haskell, which throws exceptions at runtime and makes stuff partial. An example of a pure language is Dhall, a config language - all functions must be pure, total, and terminating.</p>
<p>Benefits:</p>
<ul>
<li>Not having to worry about missing cases in tests, as your function handles all inputs by being total and
won&rsquo;t blow up</li>
<li>Easier refactoring due to composition of total functions being total</li>
<li>Less production failures with unexpected exceptions</li>
<li>Easier to reason about when there aren&rsquo;t unforeseen edge cases lurking in the back</li>
</ul>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210228222248-totality-in-functional-programming/">Totality in Functional Programming</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210228225636-total-functions-and-how-they-are-useful-to-us/">Total functions and how they are useful to us</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Totality in functional programming</title>
            <link>http://notes.gbojinov.xyz/timeline/20210228222248-totality-in-functional-programming/</link>
            <pubDate>Sun, 28 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210228222248-totality-in-functional-programming/</guid>
            <description>Notes Total functions and how they are useful to us
Where can we introduce partiality in functions?
Achieving totality in functions
Resources https://kowainik.github.io/posts/totality</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p><a href="/timeline/20210228225636-total-functions-and-how-they-are-useful-to-us/">Total functions and how they are useful to us</a></p>
<p><a href="/timeline/20210228225514-where-can-we-introduce-partiality-in-functions/">Where can we introduce partiality in functions?</a></p>
<p><a href="/timeline/20210228225209-achieving-totality-in-functions/">Achieving totality in functions</a></p>
<h2 id="resources">Resources</h2>
<p><a href="https://kowainik.github.io/posts/totality">https://kowainik.github.io/posts/totality</a></p>
]]></content>
        </item>
        
        <item>
            <title>Where can we introduce partiality in functions?</title>
            <link>http://notes.gbojinov.xyz/timeline/20210228225514-where-can-we-introduce-partiality-in-functions/</link>
            <pubDate>Sun, 28 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210228225514-where-can-we-introduce-partiality-in-functions/</guid>
            <description>Note A function that is not total, is partial. Yet again pertaining to Haskell, but is valid for other FP languages.
Where partiality can be introduced:
 Non-exhaustive pattern matching Missing conditions in guards Any pattern matching, basically Unspecified fields of records / structs / etc. Using bottom, e.g. error and undefined in Haskell Non-terminating loops Seg faults, and other low-level issues  Be careful when using wildcards, as adding new cases to types will lead to unexpected behaviour - prefer matching on all cases of a type instead when pattern matching.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>A function that is not total, is partial.
Yet again pertaining to Haskell, but is valid for other FP languages.</p>
<p>Where partiality can be introduced:</p>
<ul>
<li>Non-exhaustive pattern matching</li>
<li>Missing conditions in guards</li>
<li>Any pattern matching, basically</li>
<li>Unspecified fields of records / structs / etc.</li>
<li>Using bottom, e.g. <code>error</code> and <code>undefined</code> in Haskell</li>
<li>Non-terminating loops</li>
<li>Seg faults, and other low-level issues</li>
</ul>
<p>Be careful when using wildcards, as adding new cases to types will lead to unexpected behaviour - prefer
matching on all cases of a type instead when pattern matching.
Same goes when using <code>error</code> for seemingly unreachable code, or &ldquo;trusting&rdquo; that functions from libraries are total.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210228222248-totality-in-functional-programming/">Totality in Functional Programming</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210228225636-total-functions-and-how-they-are-useful-to-us/">Total functions and how they are useful to us</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Basic resource management with Bracket in cats-effect - Scala tutorial</title>
            <link>http://notes.gbojinov.xyz/timeline/20210225233600-basic-resource-management-with-bracket-in-cats-effect-scala-tutorial/</link>
            <pubDate>Thu, 25 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210225233600-basic-resource-management-with-bracket-in-cats-effect-scala-tutorial/</guid>
            <description>Notes Functional Resource Management with Bracket
Resources https://www.youtube.com/watch?v=vsJz-fdEsd4</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p><a href="/timeline/20210225233738-functional-resource-management-with-bracket/">Functional Resource Management with Bracket</a></p>
<h2 id="resources">Resources</h2>
<p><a href="https://www.youtube.com/watch?v=vsJz-fdEsd4">https://www.youtube.com/watch?v=vsJz-fdEsd4</a></p>
]]></content>
        </item>
        
        <item>
            <title>Functional Resource Management with Bracket</title>
            <link>http://notes.gbojinov.xyz/timeline/20210225233738-functional-resource-management-with-bracket/</link>
            <pubDate>Thu, 25 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210225233738-functional-resource-management-with-bracket/</guid>
            <description>Note A problem when acquiring resources for use in applications (opening files, database connections, http connections) is closing them even when the operation fails. Imperative programs have try,catch,finally for this, but what does Cats Effect have in the functional world? It has Bracket. It&amp;rsquo;s a type class that can have an instance for a custom type, it is also defined for IO by default.
Some of its usages are as follows.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>A problem when acquiring resources for use in applications (opening files, database connections, http
connections) is closing them even when the operation fails. Imperative programs have <code>try,catch,finally</code> for
this, but what does Cats Effect have in the functional world?
It has <code>Bracket</code>. It&rsquo;s a type class that can have an instance for a custom type, it is also defined for <code>IO</code> by default.</p>
<p>Some of its usages are as follows.</p>
<p>The close will run even if any of the other operations fails or succeeds</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-scala" data-lang="scala">open<span style="color:#f92672">(</span>file<span style="color:#f92672">).</span>bracket <span style="color:#f92672">{</span> readFile <span style="color:#f92672">}</span> <span style="color:#f92672">{</span> close <span style="color:#f92672">}</span>
</code></pre></div><p>Also guarantee is another function like this
This is the same idea as <code>try,catch,finally</code>, the <code>otherAction</code> will always run.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-scala" data-lang="scala">action<span style="color:#f92672">.</span>guarantee<span style="color:#f92672">(</span>otherAction<span style="color:#f92672">)</span>
</code></pre></div><h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210225233600-basic-resource-management-with-bracket-in-cats-effect-scala-tutorial/">Basic Resource Management With Bracket in Cats-Effect - Scala Tutorial</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210225233738-functional-resource-management-with-bracket/">Functional Resource Management with Bracket</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Parallel typeclass pattern</title>
            <link>http://notes.gbojinov.xyz/timeline/20210225232633-parallel-typeclass-pattern/</link>
            <pubDate>Thu, 25 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210225232633-parallel-typeclass-pattern/</guid>
            <description>Note The Parallel typeclass is an abstraction over the conversion between an Applicative and a Monad, e.g. when we want to do certain operations in parallel with an applicative instance, but then convert back to the monad to use a for comprehension.
An example of it would be a conversion between Validated and Either, e.g. an Either with a List of errors as the Left. Another example is IO and ParIO.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>The Parallel typeclass is an abstraction over the conversion between an Applicative and a Monad, e.g. when we
want to do certain operations in parallel with an applicative instance, but then convert back to the monad to
use a for comprehension.</p>
<p>An example of it would be a conversion between Validated and Either, e.g. an Either with a List of errors as the
Left. Another example is IO and ParIO.</p>
<p>The definition is as follows:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-scala" data-lang="scala"><span style="color:#66d9ef">trait</span> <span style="color:#a6e22e">Parallel</span><span style="color:#f92672">[</span><span style="color:#66d9ef">F</span><span style="color:#f92672">[</span><span style="color:#66d9ef">_</span><span style="color:#f92672">]]</span> <span style="color:#f92672">{</span>
  <span style="color:#66d9ef">type</span> <span style="color:#66d9ef">M</span><span style="color:#f92672">[</span><span style="color:#66d9ef">_</span><span style="color:#f92672">]</span>
  <span style="color:#66d9ef">def</span> F<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">Monad</span><span style="color:#f92672">[</span><span style="color:#66d9ef">F</span><span style="color:#f92672">]</span>
  <span style="color:#66d9ef">def</span> M<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">Applicative</span><span style="color:#f92672">[</span><span style="color:#66d9ef">F</span><span style="color:#f92672">]</span>

  <span style="color:#66d9ef">def</span> parallel<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">F</span> <span style="color:#66d9ef">~&gt;</span> <span style="color:#66d9ef">M</span>
  <span style="color:#66d9ef">def</span> sequential<span style="color:#66d9ef">:</span> <span style="color:#66d9ef">M</span> <span style="color:#66d9ef">~&gt;</span> <span style="color:#66d9ef">F</span>
<span style="color:#f92672">}</span>
</code></pre></div><p><code>parallel</code> and <code>sequential</code> are natural transformations between the Monad and the Applicative, e.g. functions
without loss of information.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210225232120-the-parallel-typeclass-in-cats-scala-tutorial/">The Parallel Typeclass in Cats - Scala Tutorial</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210225232633-parallel-typeclass-pattern/">Parallel typeclass pattern</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>The Parallel typeclass in Cats - Scala tutorial</title>
            <link>http://notes.gbojinov.xyz/timeline/20210225232120-the-parallel-typeclass-in-cats-scala-tutorial/</link>
            <pubDate>Thu, 25 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210225232120-the-parallel-typeclass-in-cats-scala-tutorial/</guid>
            <description>Notes Parallel typeclass pattern
Resources https://www.youtube.com/watch?v=Tx5LdRCaDcY</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p><a href="/timeline/20210225232633-parallel-typeclass-pattern/">Parallel typeclass pattern</a></p>
<h2 id="resources">Resources</h2>
<p><a href="https://www.youtube.com/watch?v=Tx5LdRCaDcY">https://www.youtube.com/watch?v=Tx5LdRCaDcY</a></p>
]]></content>
        </item>
        
        <item>
            <title>Calming yourself by focusing on the sensations of the body</title>
            <link>http://notes.gbojinov.xyz/timeline/20210221123134-calming-yourself-by-focusing-on-the-sensations-of-the-body/</link>
            <pubDate>Sun, 21 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210221123134-calming-yourself-by-focusing-on-the-sensations-of-the-body/</guid>
            <description>Notes Take a break from your brain by focusing on the body
Resources https://oldpodcast.com/</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p><a href="/timeline/20210221123440-take-a-break-from-your-brain-by-focusing-on-the-body/">Take a break from your brain by focusing on the body</a></p>
<h2 id="resources">Resources</h2>
<p><a href="https://oldpodcast.com/">https://oldpodcast.com/</a></p>
]]></content>
        </item>
        
        <item>
            <title>Have a to don&#39;t list</title>
            <link>http://notes.gbojinov.xyz/timeline/20210221124251-have-a-to-don-t-list/</link>
            <pubDate>Sun, 21 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210221124251-have-a-to-don-t-list/</guid>
            <description>Notes Keep track of what you don&amp;rsquo;t want to do as well
Resources https://oldpodcast.com/ https://theartofsimple.net/to-dont-do/</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p><a href="/timeline/20210221124411-keep-track-of-what-you-don-t-want-to-do-as-well/">Keep track of what you don&rsquo;t want to do as well</a></p>
<h2 id="resources">Resources</h2>
<p><a href="https://oldpodcast.com/">https://oldpodcast.com/</a>
<a href="https://theartofsimple.net/to-dont-do/">https://theartofsimple.net/to-dont-do/</a></p>
]]></content>
        </item>
        
        <item>
            <title>Keep track of what you don&#39;t want to do as well</title>
            <link>http://notes.gbojinov.xyz/timeline/20210221124411-keep-track-of-what-you-don-t-want-to-do-as-well/</link>
            <pubDate>Sun, 21 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210221124411-keep-track-of-what-you-don-t-want-to-do-as-well/</guid>
            <description>Note An important way to free our mind of clutter is writing down explicitly what we&amp;rsquo;re not going to do, also known as the the to don&amp;rsquo;t list. It can capture things like tasks you&amp;rsquo;ve been putting off for a long time, or simply something that you don&amp;rsquo;t feel will bring you value, but you are doing just to feel a sense of being productive. Crossing stuff off the to don&amp;rsquo;t list can be just as fulfilling as the to do, because it&amp;rsquo;s a feeling of taking control of your life and making choices, as well as having time to &amp;ldquo;stop and smell the roses&amp;rdquo;.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>An important way to free our mind of clutter is writing down explicitly what we&rsquo;re not going to do, also known
as the the to don&rsquo;t list. It can capture things like tasks you&rsquo;ve been putting off for a long time, or simply
something that you don&rsquo;t feel will bring you value, but you are doing just to feel a sense of being
productive. Crossing stuff off the to don&rsquo;t list can be just as fulfilling as the to do, because it&rsquo;s a feeling
of taking control of your life and making choices, as well as having time to &ldquo;stop and smell the roses&rdquo;.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210221124251-have-a-to-don-t-list/">Have a to Don&rsquo;t List</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210221124411-keep-track-of-what-you-don-t-want-to-do-as-well/">Keep track of what you don&rsquo;t want to do as well</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Ponderings on confidence</title>
            <link>http://notes.gbojinov.xyz/timeline/20210221141606-ponderings-on-confidence/</link>
            <pubDate>Sun, 21 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210221141606-ponderings-on-confidence/</guid>
            <description>Notes The initial definition of confidence
We might not need confidence to begin
The mind can be our most valuable asset and our greatest enemy
Small and big goal steps
Resources Daily journaling</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p><a href="/timeline/20210221144422-the-initial-definition-of-confidence/">The initial definition of confidence</a></p>
<p><a href="/timeline/20210221142908-we-might-not-need-confidence-to-begin/">We might not need confidence to begin</a></p>
<p><a href="/timeline/20210221144138-the-mind-can-be-our-most-valuable-asset-and-our-greatest-enemy/">The mind can be our most valuable asset and our greatest enemy</a></p>
<p><a href="/timeline/20210221144811-small-and-big-goal-steps/">Small and big goal steps</a></p>
<h2 id="resources">Resources</h2>
<p>Daily journaling</p>
]]></content>
        </item>
        
        <item>
            <title>Small and big goal steps</title>
            <link>http://notes.gbojinov.xyz/timeline/20210221144811-small-and-big-goal-steps/</link>
            <pubDate>Sun, 21 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210221144811-small-and-big-goal-steps/</guid>
            <description>Note Appreciate your smaller goals and smaller victories on the way to the bigger ones, while keeping in mind the bigger goal always of course.
Links to this note  Ponderings on Confidence   The initial definition of confidence
 </description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>Appreciate your smaller goals and smaller victories on the way to the bigger ones, while keeping in mind the bigger goal always of course.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210221141606-ponderings-on-confidence/">Ponderings on Confidence</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210221144422-the-initial-definition-of-confidence/">The initial definition of confidence</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Take a break from your brain by focusing on the body</title>
            <link>http://notes.gbojinov.xyz/timeline/20210221123440-take-a-break-from-your-brain-by-focusing-on-the-body/</link>
            <pubDate>Sun, 21 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210221123440-take-a-break-from-your-brain-by-focusing-on-the-body/</guid>
            <description>Note When you find yourself consumed by worry, either by something happening in your life, or while watching a movie, a great mindfulness technique is to focus on the sensations of the body at that moment, to &amp;ldquo;give your brain a break&amp;rdquo; from itself and moving your thoughts to a sensory level. I have found myself doing that in meetings for example when i&amp;rsquo;m feeling anxiety. Haven&amp;rsquo;t tried it with horror movies as well as was advertised, but it could work there as well.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>When you find yourself consumed by worry, either by something happening in your life, or while watching a movie,
a great mindfulness technique is to focus on the sensations of the body at that moment, to &ldquo;give your brain a
break&rdquo; from itself and moving your thoughts to a sensory level. I have found myself doing that in meetings for
example when i&rsquo;m feeling anxiety. Haven&rsquo;t tried it with horror movies as well as was advertised, but it could
work there as well.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210221123134-calming-yourself-by-focusing-on-the-sensations-of-the-body/">Calming Yourself by Focusing on the Sensations of the Body</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210221123440-take-a-break-from-your-brain-by-focusing-on-the-body/">Take a break from your brain by focusing on the body</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>The initial definition of confidence</title>
            <link>http://notes.gbojinov.xyz/timeline/20210221144422-the-initial-definition-of-confidence/</link>
            <pubDate>Sun, 21 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210221144422-the-initial-definition-of-confidence/</guid>
            <description>Note Confidence. It&amp;rsquo;s a finicky thing, isn&amp;rsquo;t it? Do we have it, do we not, how important is it? They say that in order to be successful in life you need confidence, you need to be sure of yourself and perform every action with the knowledge that you can and will succeed.
But wait a minute. That&amp;rsquo;s all great stuff, but we fail to notice one thing - confidence is not something you&amp;rsquo;re born with, well at least most of us aren&amp;rsquo;t.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>Confidence. It&rsquo;s a finicky thing, isn&rsquo;t it? Do we have it, do we not, how important is it? They say that in
order to be successful in life you need confidence, you need to be sure of yourself and perform every action
with the knowledge that you can and will succeed.</p>
<p>But wait a minute. That&rsquo;s all great stuff, but we fail to notice one thing - confidence is not something you&rsquo;re
born with, well at least most of us aren&rsquo;t. How do we acquire it? How can we develop this quality that seems so
important for success? Life has a way of showing us the finger and wrecking our confidence a lot. That&rsquo;s one of
its, hm, major qualities. So chances are that our confidence will be screwed even before it has had a chance to
set its roots.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210221141606-ponderings-on-confidence/">Ponderings on Confidence</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210221144422-the-initial-definition-of-confidence/">The initial definition of confidence</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>The mind can be our most valuable asset and our greatest enemy</title>
            <link>http://notes.gbojinov.xyz/timeline/20210221144138-the-mind-can-be-our-most-valuable-asset-and-our-greatest-enemy/</link>
            <pubDate>Sun, 21 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210221144138-the-mind-can-be-our-most-valuable-asset-and-our-greatest-enemy/</guid>
            <description>Note The mind is our most valuable asset. But it also can be our biggest enemy. It&amp;rsquo;s ironic. If we learn to condition it, to calm it, to control it to focus on the positive and the drive to improve ourselves, we can go a long way to making our life better. Letting the bad thoughts float past us, because that&amp;rsquo;s what they are - fleeting. We have lived out so many terrible things in our heads that will never come to pass.</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>The mind is our most valuable asset. But it also can be our biggest enemy. It&rsquo;s ironic. If we learn to condition
it, to calm it, to control it to focus on the positive and the drive to improve ourselves, we can go a long way
to making our life better. Letting the bad thoughts float past us, because that&rsquo;s what they are - fleeting. We
have lived out so many terrible things in our heads that will never come to pass. And they are not helping in
any way. Only making us feel worse and sometimes, leading to terrible things. What a mind can do when it&rsquo;s
influenced by something like the internet! It&rsquo;s scary to think about. Mindfulness, meditation, constant care is
what the mind requires. You can let it flow, let the ideas come, but when a bad one appears on the horizon,
don&rsquo;t let it take root. Think about how it&rsquo;s helping you right now, the answer will probably be in no way is it
helping you. Then let it pass by focusing on the body, by focusing on something tangible, so that the bad
thought can go its way out of the mind. And therein lies the key to a healthy mind. Well, at least I hope so.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210221141606-ponderings-on-confidence/">Ponderings on Confidence</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210221144422-the-initial-definition-of-confidence/">The initial definition of confidence</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>We might not need confidence to begin</title>
            <link>http://notes.gbojinov.xyz/timeline/20210221142908-we-might-not-need-confidence-to-begin/</link>
            <pubDate>Sun, 21 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210221142908-we-might-not-need-confidence-to-begin/</guid>
            <description>Note We might not need this thing called confidence. But rather we need to condition our minds, to help them realize two things - life is short, and you don&amp;rsquo;t have that much to lose that you can afford to attribute every lack of action to lack of confidence. It&amp;rsquo;s a vicious circle of sorts - you can&amp;rsquo;t perform actions without confidence, you can&amp;rsquo;t get confidence without performing successful actions. So why don&amp;rsquo;t we just eliminate the middle man?</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>We might not need this thing called confidence. But rather we need to condition our minds, to help them
realize two things - life is short, and you don&rsquo;t have that much to lose that you can afford to attribute every
lack of action to lack of confidence. It&rsquo;s a vicious circle of sorts - you can&rsquo;t perform actions without
confidence, you can&rsquo;t get confidence without performing successful actions. So why don&rsquo;t we just eliminate the
middle man? Something I heard in Young Sheldon struck me as quite deep. What do I do when i&rsquo;m afraid? He asks
his sister. She says: &ldquo;I guess we should be afraid and do it anyway.&rdquo; And how true that rings! While someone is
thinking how little confidence they have and how they can&rsquo;t achieve anything because their confidence has been
defeated by life, someone else just takes the step. Despite being afraid and not having confidence. The mind can
always convince us that we can&rsquo;t do something. It&rsquo;s just what it does. It&rsquo;s a parasite of sorts. Annoys the hell
out of me. So, in the end, ask yourself not am I confident enough, but rather, what exactly do I have to lose?
Is it worth actually not doing it because of that? I&rsquo;m fairly certain in most cases the answer will be no it&rsquo;s
not. Because you&rsquo;ll regret it. And regret is not something you want to die with. You regret the things you
didn&rsquo;t do more than those you do. What would&rsquo;ve happened if I&rsquo;d taken that opportunity to do something? That I
passed it up because I thought I wasn&rsquo;t confident enough. But looking back, it would&rsquo;ve only helped me. And the
fear of failure and lack of confidence don&rsquo;t matter all that much anymore.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210221141606-ponderings-on-confidence/">Ponderings on Confidence</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210221144422-the-initial-definition-of-confidence/">The initial definition of confidence</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Create a productivity habit with a fixed days challenge</title>
            <link>http://notes.gbojinov.xyz/timeline/20210217232706-create-a-productivity-habit-with-a-fixed-days-challenge/</link>
            <pubDate>Wed, 17 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210217232706-create-a-productivity-habit-with-a-fixed-days-challenge/</guid>
            <description>Note To create a lasting habit for a productivity (or any habit, for that matter), you can start with an X day challenge to do the habit - that way you have the opportunity to see how the habit fits in to your regular routine and adapt it / change it.
Links to this note  How to USE Productivity Advice (Instead of Just Consuming It)   A couple of ideas:</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>To create a lasting habit for a productivity (or any habit, for that matter), you can start with an X day
challenge to do the habit - that way you have the opportunity to see how the habit fits in to your regular
routine and adapt it / change it.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210217232135-how-to-use-productivity-advice-instead-of-just-consuming-it/">How to USE Productivity Advice (Instead of Just Consuming It)</a></li>
</ul>
<blockquote>
<p>A couple of ideas:</p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>How to Get More Done and Waste Less Time</title>
            <link>http://notes.gbojinov.xyz/timeline/20210217231426-how-to-get-more-done-and-waste-less-time/</link>
            <pubDate>Wed, 17 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210217231426-how-to-get-more-done-and-waste-less-time/</guid>
            <description>Notes Prioritise tasks with the Eisenhower matrix
Resources Link</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p><a href="/timeline/20210217231643-prioritise-tasks-with-the-eisenhower-matrix/">Prioritise tasks with the Eisenhower matrix</a></p>
<h2 id="resources">Resources</h2>
<p><a href="https://youtu.be/J5SXT9r2214">Link</a></p>
]]></content>
        </item>
        
        <item>
            <title>How to USE Productivity Advice (Instead of Just Consuming It)</title>
            <link>http://notes.gbojinov.xyz/timeline/20210217232135-how-to-use-productivity-advice-instead-of-just-consuming-it/</link>
            <pubDate>Wed, 17 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210217232135-how-to-use-productivity-advice-instead-of-just-consuming-it/</guid>
            <description>Notes A couple of ideas:
 Prioritise tasks with the Eisenhower matrix Start with other people&amp;rsquo;s systems Create a productivity habit with a fixed days challenge Think about whether what you&amp;rsquo;re doing is actually getting you to the goal or not  Resources Link</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p>A couple of ideas:</p>
<ol>
<li><a href="/timeline/20210217231643-prioritise-tasks-with-the-eisenhower-matrix/">Prioritise tasks with the Eisenhower matrix</a></li>
<li><a href="/timeline/20210217232332-start-with-other-people-s-systems/">Start with other people&rsquo;s systems</a></li>
<li><a href="/timeline/20210217232706-create-a-productivity-habit-with-a-fixed-days-challenge/">Create a productivity habit with a fixed days challenge</a></li>
<li>Think about whether what you&rsquo;re doing is actually getting you to the goal or not</li>
</ol>
<h2 id="resources">Resources</h2>
<p><a href="https://youtu.be/0QdUE8q5Tpc">Link</a></p>
]]></content>
        </item>
        
        <item>
            <title>Languages are tools</title>
            <link>http://notes.gbojinov.xyz/timeline/20210217225610-languages-are-tools/</link>
            <pubDate>Wed, 17 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210217225610-languages-are-tools/</guid>
            <description>Note When speaking to somebody, don&amp;rsquo;t focus on yourself and how you might screw up language-wise or grammar-wise, focus on the person you&amp;rsquo;re speaking to and the goal you want to achieve. A language is a tool, used to get what you want and get stuff done. If your confidence becomes shaky the other person might misinterpret that and think it&amp;rsquo;s because you can&amp;rsquo;t get the job done.
Links to this note  Learning a Language?</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>When speaking to somebody, don&rsquo;t focus on yourself and how you might screw up language-wise or grammar-wise, focus on the person you&rsquo;re speaking to and the goal you want to achieve. A language is a tool, used to get what you want and get stuff done. If your confidence becomes shaky the other person might misinterpret that and think it&rsquo;s because you can&rsquo;t get the job done.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210217230530-learning-a-language-speak-it-like-you-re-playing-a-video-game-marianna-pascal-tedxpenangroad/">Learning a Language? Speak it Like You’Re Playing a Video Game | Marianna Pascal | Tedxpenangroad</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210217225610-languages-are-tools/">Languages are tools</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Learning a language? Speak it like you’re playing a video game | Marianna Pascal | TEDxPenangRoad</title>
            <link>http://notes.gbojinov.xyz/timeline/20210217230530-learning-a-language-speak-it-like-you-re-playing-a-video-game-marianna-pascal-tedxpenangroad/</link>
            <pubDate>Wed, 17 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210217230530-learning-a-language-speak-it-like-you-re-playing-a-video-game-marianna-pascal-tedxpenangroad/</guid>
            <description>Notes Languages are tools
Resources Ted talk</description>
            <content type="html"><![CDATA[<h2 id="notes">Notes</h2>
<p><a href="/timeline/20210217225610-languages-are-tools/">Languages are tools</a></p>
<h2 id="resources">Resources</h2>
<p><a href="https://youtu.be/Ge7c7otG2mk">Ted talk</a></p>
]]></content>
        </item>
        
        <item>
            <title>Prioritise tasks with the Eisenhower matrix</title>
            <link>http://notes.gbojinov.xyz/timeline/20210217231643-prioritise-tasks-with-the-eisenhower-matrix/</link>
            <pubDate>Wed, 17 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210217231643-prioritise-tasks-with-the-eisenhower-matrix/</guid>
            <description>Note The Eisenhower matrix for organising your day/week/month This is based off the idea of prioritisation of tasks - it has four quadrants:
 Important and urgent tasks - do them right away Important but not urgent tasks - schedule them for later but still so them Not important but urgent - delegate OR automate them somehow Not important and not urgent - annihilate them, time wasters are here  Links to this note  How to USE Productivity Advice (Instead of Just Consuming It)   A couple of ideas:</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>The Eisenhower matrix for organising your day/week/month
This is based off the idea of prioritisation of tasks - it has four quadrants:</p>
<ol>
<li>Important and urgent tasks - do them right away</li>
<li>Important but not urgent tasks - schedule them for later but still so them</li>
<li>Not important but urgent - delegate OR automate them somehow</li>
<li>Not important and not urgent - annihilate them, time wasters are here</li>
</ol>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210217232135-how-to-use-productivity-advice-instead-of-just-consuming-it/">How to USE Productivity Advice (Instead of Just Consuming It)</a></li>
</ul>
<blockquote>
<p>A couple of ideas:</p>
</blockquote>
<ul>
<li><a href="/timeline/20210217231426-how-to-get-more-done-and-waste-less-time/">How to Get More Done and Waste Less Time</a></li>
</ul>
<blockquote>
<p><a href="/timeline/20210217231643-prioritise-tasks-with-the-eisenhower-matrix/">Prioritise tasks with the Eisenhower matrix</a></p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Start with other people&#39;s systems</title>
            <link>http://notes.gbojinov.xyz/timeline/20210217232332-start-with-other-people-s-systems/</link>
            <pubDate>Wed, 17 Feb 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210217232332-start-with-other-people-s-systems/</guid>
            <description>Note When starting out with a productivity practice, it can be very useful to follow someone else&amp;rsquo;s system and then adapt it to work for you. Takes off the pressure of coming up with a solution from scratch and frankly, wasting the mental energy to reinvent the wheel and it allows you to build upon something existing.
Links to this note  How to USE Productivity Advice (Instead of Just Consuming It)   A couple of ideas:</description>
            <content type="html"><![CDATA[<h2 id="note">Note</h2>
<p>When starting out with a productivity practice, it can be very useful to follow someone else&rsquo;s system and then
adapt it to work for you. Takes off the pressure of coming up with a solution from scratch and frankly, wasting
the mental energy to reinvent the wheel and it allows you to build upon something existing.</p>
<h2 id="links-to-this-note">Links to this note</h2>
<ul>
<li><a href="/timeline/20210217232135-how-to-use-productivity-advice-instead-of-just-consuming-it/">How to USE Productivity Advice (Instead of Just Consuming It)</a></li>
</ul>
<blockquote>
<p>A couple of ideas:</p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Index</title>
            <link>http://notes.gbojinov.xyz/timeline/20210120223526-index/</link>
            <pubDate>Wed, 20 Jan 2021 00:00:00 +0200</pubDate>
            
            <guid>http://notes.gbojinov.xyz/timeline/20210120223526-index/</guid>
            <description>Hello there! Welcome to my knowledge base!
Here&amp;rsquo;s something interesting:
This will eventually have permanent notes in it that I believe are interesting.</description>
            <content type="html"><![CDATA[<h2 id="hello-there">Hello there!</h2>
<p>Welcome to my knowledge base!</p>
<p>Here&rsquo;s something interesting:</p>
<p>This will eventually have permanent notes in it that I believe are interesting.</p>
]]></content>
        </item>
        
    </channel>
</rss>
